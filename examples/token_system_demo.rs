// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Token System Pallet
use pallet_token_system::{TokenSystem, TokenSystemConfig, TokenType};

fn main() -> Result<(), Box<dyn std::error::Error>> {
    println!("üöÄ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Token System Pallet ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô");
    println!("================================================================");

    // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏ó‡πÄ‡∏Ñ‡πá‡∏ô‡πÉ‡∏´‡∏°‡πà
    let config = TokenSystemConfig {
        min_stake_amount: 5000,
        staking_reward_rate: 1000, // 10% ‡∏ï‡πà‡∏≠‡∏õ‡∏µ
        voting_period: 150,
        min_proposal_balance: 15000,
        grid_initial_supply: 2_000_000_000,
        watt_initial_supply: 2_000_000_000,
    };
    
    let mut token_system = TokenSystem::new(config);
    
    println!("\n‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏ó‡πÄ‡∏Ñ‡πá‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
    println!("   - GRID Token ‡∏≠‡∏∏‡∏õ‡∏ó‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: {} tokens", token_system.total_supply(&TokenType::Grid));
    println!("   - WATT Token ‡∏≠‡∏∏‡∏õ‡∏ó‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: {} tokens", token_system.total_supply(&TokenType::Watt));

    // 2. ‡∏≠‡∏≠‡∏Å‡πÇ‡∏ó‡πÄ‡∏Ñ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö)
    println!("\nü™ô ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÇ‡∏ó‡πÄ‡∏Ñ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");
    
    // Alice - ‡πÇ‡∏ã‡∏•‡∏≤‡∏£‡πå‡πÄ‡∏ã‡∏•‡∏•‡πå‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡πâ‡∏≤‡∏ô
    token_system.mint_grid(&"alice".to_string(), 100000)?;
    token_system.mint_watt(&"alice".to_string(), 50000)?;
    
    // Bob - ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏•‡∏°
    token_system.mint_grid(&"bob".to_string(), 75000)?;
    token_system.mint_watt(&"bob".to_string(), 30000)?;
    
    // Charlie - ‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡πÇ‡∏†‡∏Ñ‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô
    token_system.mint_grid(&"charlie".to_string(), 25000)?;
    token_system.mint_watt(&"charlie".to_string(), 20000)?;
    
    println!("   Alice: {} GRID, {} WATT", 
             token_system.grid_balance(&"alice".to_string()),
             token_system.watt_balance(&"alice".to_string()));
    println!("   Bob: {} GRID, {} WATT", 
             token_system.grid_balance(&"bob".to_string()),
             token_system.watt_balance(&"bob".to_string()));
    println!("   Charlie: {} GRID, {} WATT", 
             token_system.grid_balance(&"charlie".to_string()),
             token_system.watt_balance(&"charlie".to_string()));

    // 3. Staking ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏≤‡∏†‡∏¥‡∏ö‡∏≤‡∏•
    println!("\nüí∞ ‡∏Å‡∏≤‡∏£ Stake ‡πÇ‡∏ó‡πÄ‡∏Ñ‡πá‡∏ô GRID");
    
    token_system.stake(&"alice".to_string(), 30000)?;
    token_system.stake(&"bob".to_string(), 20000)?;
    token_system.stake(&"charlie".to_string(), 10000)?;
    
    println!("   Alice stake: {} GRID", 
             token_system.get_stake_info(&"alice".to_string()).unwrap().amount);
    println!("   Bob stake: {} GRID", 
             token_system.get_stake_info(&"bob".to_string()).unwrap().amount);
    println!("   Charlie stake: {} GRID", 
             token_system.get_stake_info(&"charlie".to_string()).unwrap().amount);
    println!("   ‡∏£‡∏ß‡∏° staked: {} GRID", token_system.total_staked());

    // 4. ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
    println!("\n‚ö° ‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢ WATT tokens");
    
    // Alice ‡∏Ç‡∏≤‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡πÇ‡∏ã‡∏•‡∏≤‡∏£‡πå‡πÄ‡∏ã‡∏•‡∏•‡πå‡πÉ‡∏´‡πâ Charlie (10 kWh = 10,000 WATT)
    let energy_cost = 10000; // 10 kWh ‡∏ó‡∏µ‡πà 1 WATT/kWh
    token_system.transfer_watt(&"charlie".to_string(), &"alice".to_string(), energy_cost)?;
    
    println!("   Charlie ‡∏ã‡∏∑‡πâ‡∏≠‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô 10 kWh ‡∏à‡∏≤‡∏Å Alice ‡∏î‡πâ‡∏ß‡∏¢ {} WATT", energy_cost);
    println!("   Alice ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ WATT: {}", token_system.watt_balance(&"alice".to_string()));
    println!("   Charlie ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠ WATT: {}", token_system.watt_balance(&"charlie".to_string()));

    // 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏ò‡∏£‡∏£‡∏°‡∏≤‡∏†‡∏¥‡∏ö‡∏≤‡∏•
    println!("\nüèõÔ∏è ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠‡∏ò‡∏£‡∏£‡∏°‡∏≤‡∏†‡∏¥‡∏ö‡∏≤‡∏•");
    
    let proposal_id = token_system.create_proposal(
        &"alice".to_string(),
        "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• Staking ‡πÄ‡∏õ‡πá‡∏ô 12%".to_string(),
        "‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° staking ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô ‡πÄ‡∏™‡∏ô‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏à‡∏≤‡∏Å 10% ‡πÄ‡∏õ‡πá‡∏ô 12% ‡∏ï‡πà‡∏≠‡∏õ‡∏µ".to_string()
    )?;
    
    println!("   ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠ ID: {}", proposal_id);
    let proposal = token_system.get_proposal(proposal_id).unwrap();
    println!("   ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠: {}", proposal.title);
    println!("   ‡∏ú‡∏π‡πâ‡πÄ‡∏™‡∏ô‡∏≠: {}", proposal.proposer);
    println!("   ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {:?}", proposal.status);

    // 6. ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á
    println!("\nüó≥Ô∏è ‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á");
    
    // Bob ‡πÅ‡∏•‡∏∞ Charlie ‡∏•‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô
    token_system.vote(proposal_id, &"bob".to_string(), true)?;
    token_system.vote(proposal_id, &"charlie".to_string(), true)?;
    
    let proposal = token_system.get_proposal(proposal_id).unwrap();
    println!("   ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô: {} votes", proposal.votes_for);
    println!("   ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ñ‡∏±‡∏î‡∏Ñ‡πâ‡∏≤‡∏ô: {} votes", proposal.votes_against);

    // 7. ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•
    println!("\n‚è∞ ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 50 ‡∏ö‡∏•‡πá‡∏≠‡∏Å ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• Staking");
    
    token_system.set_block(50);
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Alice
    let alice_rewards = token_system.calculate_rewards(&"alice".to_string());
    if alice_rewards > 0 {
        token_system.claim_rewards(&"alice".to_string())?;
        println!("   Alice ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•: {} GRID", alice_rewards);
        println!("   Alice ‡∏¢‡∏≠‡∏î‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà: {} GRID", token_system.grid_balance(&"alice".to_string()));
    }

    // 8. ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠
    println!("\nüìã ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡πÄ‡∏™‡∏ô‡∏≠");
    
    token_system.set_block(200); // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
    token_system.finalize_proposal(proposal_id)?;
    
    let proposal = token_system.get_proposal(proposal_id).unwrap();
    println!("   ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢: {:?}", proposal.status);

    // 9. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡πÇ‡∏ó‡πÄ‡∏Ñ‡πá‡∏ô (‡∏Å‡∏•‡πÑ‡∏Å‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏†‡∏≤‡∏û)
    println!("\nüí± ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏Ñ‡∏≤‡πÇ‡∏ó‡πÄ‡∏Ñ‡πá‡∏ô");
    
    // ‡∏£‡∏≤‡∏Ñ‡∏≤ WATT ‡∏•‡∏î‡∏•‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡∏∏‡∏õ‡∏ó‡∏≤‡∏ô‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô
    token_system.update_token_price(TokenType::Watt, 9800)?; // ‡∏•‡∏î‡∏à‡∏≤‡∏Å 10000 ‡πÄ‡∏õ‡πá‡∏ô 9800
    
    let watt_info = token_system.get_token_info(&TokenType::Watt).unwrap();
    println!("   ‡∏£‡∏≤‡∏Ñ‡∏≤ WATT ‡πÉ‡∏´‡∏°‡πà: {} basis points (${:.2})", 
             watt_info.price, watt_info.price as f64 / 10000.0);

    // 10. ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
    println!("\nüìä ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏∞‡∏ö‡∏ö");
    println!("   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Events ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {}", token_system.get_events().len());
    println!("   GRID tokens ‡∏ó‡∏µ‡πà stake: {}", token_system.total_staked());
    println!("   GRID total supply: {}", token_system.total_supply(&TokenType::Grid));
    println!("   WATT total supply: {}", token_system.total_supply(&TokenType::Watt));

    // ‡πÅ‡∏™‡∏î‡∏á Events ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
    println!("\nüéØ Events ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:");
    for (i, event) in token_system.get_events().iter().rev().take(5).enumerate() {
        println!("   {}. {:?}", i + 1, event);
    }

    println!("\n‚ú® ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! Token System Pallet ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå");
    println!("üåü ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á!");

    Ok(())
}
